// module kernel.socket

function sockfd_lookup(fd)
{
    current = task_current()
    $*current := @cast(current, "task_struct", "kernel<linux/sched.h>")

    files = $*current->files
    $*files := @cast(files, "files_struct", "kernel<linux/fdtable.h>")

    if (files == 0 || $*files->fdt == 0 || fd >= $*files->fdt->max_fds) {
        return 0
    }

    file = $*files->fdt->fd[fd]
    $*file := @cast(file, "struct file", "kernel")

    if ($*file->f_op != &@var("socket_file_ops@net/socket.c", "kernel")) {
        return 0
    }

    return $*file->private_data
}


function socket_tcp_state(socket)
{
    $*socket := @cast(socket, "struct socket", "kernel")
    state = $*socket->sk->__sk_common->skc_state
    return tcp_sockstate_str(state)
}


function socket_dport(socket)
{
    $*socket := @cast(socket, "struct socket", "kernel")
    sk = $*socket->sk
    return __tcp_sock_dport(sk)
}


function socket_sport(socket)
{
    $*socket := @cast(socket, "struct socket", "kernel")
    sk = $*socket->sk
    return __tcp_sock_sport(sk)
}


function sock_is_client(sock)
{
    inet = sock
    $*inet := @cast(inet, "struct inet_sock", "kernel")
    return $*inet->sk->__sk_common->skc_rcv_saddr == $*inet->inet_saddr
}


function socket_is_client(socket)
{
    $*socket := @cast(socket, "struct socket", "kernel")
    return sock_is_client($*socket->sk)

}
